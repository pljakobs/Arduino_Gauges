This all came out a little different than planned.

first of all, the more code I write, the more this clearly looks like something that should use templates.
I keep creating classes for combinations of datatype and visualizations, which wasn't the intention. In fact, it would be far superior to just have a "numbericalGauge" that displays a number and a "tapeGauge" that shows a tape - whatever number format it's being fed....




Struktur:

[display]
Data:
	pointer to first screen
	current screen 

[display]
Data:

Functions:
	redraw
	showScreen(number)
	showNextScreen
	showPrevScreen
	mode(day/night)

[Screen]
Data:
	pointer to menu
	pointer to next screen (or NULL)
	pointer to previous screen (or NULL)
	pointer to first gauge
Functions:
	redraw
	show
	hide	
[gauge]
	pointer to previous gauge (or NULL)
	pointer to next gauge (or NULL)
	(x,y) coordinates
	bgColor
	textColor	

[derivedGauge] // specific Gauges for specific forms of data display and values
Data:
	value
	+ special values such as low/high water marks
Functions:
	redraw
	show
	hide

[node]
Data:
	next
	prev
functions:
	getNext
	getPrev

[list]
Data
	firstNode
Functions:
	insertNode
	removeNode
	getFirstNode
